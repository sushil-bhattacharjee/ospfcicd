image: python:3.10-slim

stages:
  - show_version
  - connection_test
  - build
  - test
  - deploy
  

variables:
  ANSIBLE_HOST_KEY_CHECKING: "False"

before_script:
  # Update system and install required dependencies
  - apt-get update && apt-get install -y sshpass git libffi-dev gcc
  # Create and activate a virtual environment
  - python3 -m venv .venv
  - source .venv/bin/activate
  # Upgrade pip and install required Python packages
  - pip install --upgrade pip
  - pip install ansible ansible-pylibssh jinja2 paramiko pyyaml requests
  - chmod 755 $CI_PROJECT_DIR

show_version:
  stage: show_version
  script:
    - echo "Fetching 'show version' using REST API for R1"
    - python3 fetch_show_version.py 10.1.10.11 cisco cisco
    - echo "Fetching 'show version' using REST API for R2"
    - python3 fetch_show_version.py 10.1.10.12 cisco cisco
    - echo "Fetching 'show version' using REST API for R3"
    - python3 fetch_show_version.py 10.1.10.13 cisco cisco
    - echo "Fetching 'show version' using REST API for R5"
    - python3 fetch_show_version.py 10.1.10.15 cisco cisco
    
connection_test:
  stage: connection_test
  script:
    - echo "Testing SSH connectivity to all routers"
    - ansible all -i inventory.yml -m ping

build:
  stage: build
  script:
    - echo "Configuring OSPF for R1 and R2"
    - ansible-playbook configure_ospf.yml -i inventory.yml --limit R1,R2 -vvv

test:
  stage: test
  script:
    - echo "Verifying OSPF Neighborship between R1 and R2"
    - ansible-playbook verify_ospf.yml -i inventory.yml --limit R1,R2

deploy:
  stage: deploy
  script:
    - echo "Configuring OSPF for R5 and R3"
    - ansible-playbook configure_ospf.yml -i inventory.yml --limit R5,R3
    - echo "Verifying OSPF Neighborship between R5 and R3"
    - ansible-playbook verify_ospf.yml -i inventory.yml --limit R5,R3


